\begin{scaletikzpicturetowidth}{0.95\textwidth}
	\begin{tikzpicture}[scale=\tikzscale, every node/.style={transform shape}]
		\draw (0,0) rectangle ++(8,1.3) node[pos=0.5] {\breakC{Base Kernel Core\\(also holds application reified data)}};
		\draw[rounded corners=0.5em] (0,2) rectangle ++(8,8);
		\draw (2.5,2.5) rectangle ++(3,1) node[pos=0.5] {\breakC{static default\\scheduling policy}};
		
		\draw (4,5.5) ellipse (1.5 and 0.5);
		\node at (4,5.5) {rScheduler};

		\draw    (2,7.75) ellipse (1.25 and 0.4);
		\node at (2,7.75) {Priority};
		\draw    (4,9)   ellipse (1.25 and 0.4);
		\node at (4,9)   {Optimized};
		\draw    (6,7.75) ellipse (1.25 and 0.4);
		\node at (6,7.75) {User-Defined};

		\draw[dot diameter=1.5pt, dot spacing=4pt, dots] (0.1,4) -- ++(7.9,0);
		\node[anchor=south west] at (0.1,4.05) {\small meta-level};
		\node[anchor=north west] at (0.1,3.95) {\small base-level};

		\draw[<-, thick] (3.5,1.3) to [bend left=45]  node[anchor=east, pos=0.33] {\footnotesize reify}        ++(0,1.2);
		\draw[->, thick] (4.5,1.3) to [bend right=45] node[anchor=west, pos=0.33] {\footnotesize install code} ++(0,1.2);
		
		\draw[<-, thick] (4,3.5) -- node[anchor=west, inner sep=0, pos=0.7] {\footnotesize \breakC{causal link to\\process queue}} ++(0,1.5);
		
		\draw[->, thick] (4,6) -- ++(0,2.6);
		\draw[thick] ($(4,5.5)+(110:1.5 and 0.5)$) edge[out=110,in=270,->] node[anchor=north east, inner sep=-3pt] {\footnotesize \breakC{change behavior\\after interception}}(2,7.35);
		\draw[thick] ($(4,5.5)+(70:1.5 and 0.5)$) edge[out=70,in=270,->] (6,7.35);
		\draw[thick] ($(4,5.5)+(225:1.5 and 0.5)$) edge[out=225,in=90,<-] node[anchor=east, inner sep=0, pos=0.766] {\footnotesize \breakC{transfer\\control on\\intercepted\\call}} (2,1.3);
		\draw[thick] ($(4,5.5)+(0:1.5 and 0.5)$) edge[out=0,in=90,->] node[anchor=south west, inner sep=0, pos=0.15, xshift=-4mm] {\footnotesize \breakL{request:\\\hspace{2.5mm}installCode\\\hspace{2.5mm}linkData\\\hspace{2.5mm}interceptCall}} (7,1.3);
		
	\end{tikzpicture}
\end{scaletikzpicturetowidth}
